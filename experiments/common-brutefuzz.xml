<project xmlns:jacoco="antlib:org.jacoco.ant">

  <basename property="program" file="${basedir}" />
  <property name="ant.project.name" value="${program} driver" />
  <import file="common-logging.xml" />

  <!--
      Must set build.programs.dir, build.drivers.dir,
      build.tests.dir, gen.dir
  -->
  <path id="classpath.jacoco" />
  <property name="srcdir" location="${basedir}" />
  <property name="classdir.program" value="${build.programs.dir}/${program}" />
  <property name="classdir.drivers" value="${build.drivers.dir}/brutefuzz/${program}" />
  <property name="classdir.tests" value="${build.tests.dir}/brutefuzz/${program}" />
  <property name="gendir.tests" value="${gen.dir}/brutefuzz/${program}" />

  <!-- Import program-specific class path from program's build.xml -->
  <path id="classpath.program" />
  <import file="${src.programs.dir}/${program}/build.xml" />


  <path id="classpath.drivers">
    <pathelement path="${classdir.program}" />
    <pathelement path="${classdir.drivers}" />
    <path refid="classpath.program" />
  </path>

  <path id="classpath.tests">
    <pathelement path="${classdir.program}" />
    <pathelement path="${classdir.drivers}" />
    <pathelement path="${classdir.tests}" />
    <path refid="classpath.program" />
    <path refid="classpath.junit4" />
  </path>

  <target name="compile-drivers">
    <echo>>>> Compiling BruteFuzz drivers for ${program}</echo>
    <mkdir dir="${classdir.drivers}" />
    <javac srcdir="${srcdir}"
	   destdir="${classdir.drivers}"
	   classpathref="classpath.drivers"
	   source="1.6"
	   target="1.6"
	   debug="true"
	   includeAntRuntime="false">
    </javac>
  </target>

  <target name="generate-tests">
    <echo-begin-generate tool="brutefuzz" program="${program}" />
    <echo>>>> Generating BruteFuzz tests for ${program}</echo>
    <mkdir dir="${gendir.tests}" />
    <exec executable="python2">
      <arg value="${tool.brutefuzz.dir}/brutefuzz.py" />
      <arg value="BruteFuzzTest" />
      <arg value="${srcdir}/methodlist" />
      <arg value="${gendir.tests}" />
    </exec>
    <echo-end-generate tool="brutefuzz" program="${program}" />
  </target>

  <target name="compile-tests">
    <echo>>>> Compiling BruteFuzz tests for ${program}</echo>
    <mkdir dir="${classdir.tests}" />
    <javac srcdir="${srcdir}"
	   destdir="${classdir.tests}"
	   classpathref="classpath.tests"
	   debug="true"
	   includeAntRuntime="false">
    </javac>
  </target>

  <target name="run-tests">
    <echo>>>> Collecting coverage of BruteFuzz tests for ${program}</echo>
    <jacoco:agent property="agent.vmparam"
		  destfile="jacoco.exec"
		  append="false" />
    <apply executable="java"
	   dir="${classdir.tests}"
	   parallel="true"
	   addsourcefile="false"
	   relative="true" >
      <arg value="${agent.vmparam}" />
      <arg value="-classpath" />
      <arg value="${toString:classpath.tests}" />
      <arg value="org.junit.runner.JUnitCore" />
      <targetfile />
      <fileset dir="${classdir.tests}" includes="*.class" />
      <mapper type="package" from="*.class" to="*" />
      <redirector output="run_tests.log" append="false" />
    </apply>
  </target>
</project>
